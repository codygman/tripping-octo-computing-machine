module Data.DOM.Simple.Unsafe.Navigator where
import Prim ()
import Prelude ()
import Control.Monad.Eff ()
import Data.DOM.Simple.Types ()
foreign import unsafeUserAgent :: forall eff. Data.DOM.Simple.Types.DOMNavigator -> Control.Monad.Eff.Eff (dom :: Data.DOM.Simple.Types.DOM | eff) Prim.String
foreign import unsafeProduct :: forall eff. Data.DOM.Simple.Types.DOMNavigator -> Control.Monad.Eff.Eff (dom :: Data.DOM.Simple.Types.DOM | eff) Prim.String
foreign import unsafePlatform :: forall eff. Data.DOM.Simple.Types.DOMNavigator -> Control.Monad.Eff.Eff (dom :: Data.DOM.Simple.Types.DOM | eff) Prim.String
foreign import unsafeLanguage :: forall eff. Data.DOM.Simple.Types.DOMNavigator -> Control.Monad.Eff.Eff (dom :: Data.DOM.Simple.Types.DOM | eff) Prim.String
foreign import unsafeAppCodeName :: forall eff. Data.DOM.Simple.Types.DOMNavigator -> Control.Monad.Eff.Eff (dom :: Data.DOM.Simple.Types.DOM | eff) Prim.String
foreign import unsafeAppVersion :: forall eff. Data.DOM.Simple.Types.DOMNavigator -> Control.Monad.Eff.Eff (dom :: Data.DOM.Simple.Types.DOM | eff) Prim.String
foreign import unsafeAppName :: forall eff. Data.DOM.Simple.Types.DOMNavigator -> Control.Monad.Eff.Eff (dom :: Data.DOM.Simple.Types.DOM | eff) Prim.String
