"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (_37) {
    if (_37 instanceof Leaf) {
        return [  ];
    };
    if (_37 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_37.value0))(Prelude["++"](Data_Array.semigroupArray)([ _37.value2 ])(values(_37.value3)));
    };
    if (_37 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_37.value0))(Prelude["++"](Data_Array.semigroupArray)([ _37.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_37.value3))(Prelude["++"](Data_Array.semigroupArray)([ _37.value5 ])(values(_37.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_35) {
    if (_35 instanceof Leaf) {
        return [  ];
    };
    if (_35 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_35.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_35.value1, _35.value2) ])(toList(_35.value3)));
    };
    if (_35 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_35.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_35.value1, _35.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_35.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_35.value4, _35.value5) ])(toList(_35.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_29) {
            if (_29 instanceof Leaf) {
                return "Leaf";
            };
            if (_29 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_29.value0) + (") (" + (Prelude.show(__dict_Show_0)(_29.value1) + (") (" + (Prelude.show(__dict_Show_1)(_29.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_29.value3) + ")")))))));
            };
            if (_29 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_29.value0) + (") (" + (Prelude.show(__dict_Show_0)(_29.value1) + (") (" + (Prelude.show(__dict_Show_1)(_29.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_29.value3) + (") (" + (Prelude.show(__dict_Show_0)(_29.value4) + (") (" + (Prelude.show(__dict_Show_1)(_29.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_29.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_4) {
    return function (__copy__31) {
        return function (__copy__32) {
            var __dict_Ord_4 = __copy___dict_Ord_4;
            var _31 = __copy__31;
            var _32 = __copy__32;
            tco: while (true) {
                if (_32 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_32 instanceof Two && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_31)(_32.value1)) {
                    return new Data_Maybe.Just(_32.value2);
                };
                if (_32 instanceof Two && Prelude["<"](__dict_Ord_4)(_31)(_32.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__31 = _31;
                    var __tco__32 = _32.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _31 = __tco__31;
                    _32 = __tco__32;
                    continue tco;
                };
                if (_32 instanceof Two) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__31 = _31;
                    var __tco__32 = _32.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _31 = __tco__31;
                    _32 = __tco__32;
                    continue tco;
                };
                if (_32 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_31)(_32.value1)) {
                    return new Data_Maybe.Just(_32.value2);
                };
                if (_32 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_31)(_32.value4)) {
                    return new Data_Maybe.Just(_32.value5);
                };
                if (_32 instanceof Three && Prelude["<"](__dict_Ord_4)(_31)(_32.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__31 = _31;
                    var __tco__32 = _32.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _31 = __tco__31;
                    _32 = __tco__32;
                    continue tco;
                };
                if (_32 instanceof Three && (Prelude["<"](__dict_Ord_4)(_32.value1)(_31) && Prelude["<="](__dict_Ord_4)(_31)(_32.value4))) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__31 = _31;
                    var __tco__32 = _32.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _31 = __tco__31;
                    _32 = __tco__32;
                    continue tco;
                };
                if (_32 instanceof Three) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__31 = _31;
                    var __tco__32 = _32.value6;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _31 = __tco__31;
                    _32 = __tco__32;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_5) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_5)(k)(m));
        };
    };
};
var keys = function (_36) {
    if (_36 instanceof Leaf) {
        return [  ];
    };
    if (_36 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_36.value0))(Prelude["++"](Data_Array.semigroupArray)([ _36.value1 ])(keys(_36.value3)));
    };
    if (_36 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_36.value0))(Prelude["++"](Data_Array.semigroupArray)([ _36.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_36.value3))(Prelude["++"](Data_Array.semigroupArray)([ _36.value4 ])(keys(_36.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_30) {
    if (_30 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (_38) {
    return function (_39) {
        if (_39 instanceof Leaf) {
            return Leaf.value;
        };
        if (_39 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(_38)(_39.value0), _39.value1, _38(_39.value2), Prelude["<$>"](functorMap)(_38)(_39.value3));
        };
        if (_39 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(_38)(_39.value0), _39.value1, _38(_39.value2), Prelude["<$>"](functorMap)(_38)(_39.value3), _39.value4, _38(_39.value5), Prelude["<$>"](functorMap)(_38)(_39.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_6) {
    return function (__copy__33) {
        return function (__copy__34) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var _33 = __copy__33;
            var _34 = __copy__34;
            tco: while (true) {
                if (_33.length === 0) {
                    return _34;
                };
                if (_33.length >= 1) {
                    var _235 = _33.slice(1);
                    if (_33[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__34 = new Two(_34, (_33[0]).value0, (_33[0]).value1, (_33[0]).value2);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _33 = _235;
                        _34 = __tco__34;
                        continue tco;
                    };
                };
                if (_33.length >= 1) {
                    var _240 = _33.slice(1);
                    if (_33[0] instanceof TwoRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__34 = new Two((_33[0]).value0, (_33[0]).value1, (_33[0]).value2, _34);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _33 = _240;
                        _34 = __tco__34;
                        continue tco;
                    };
                };
                if (_33.length >= 1) {
                    var _248 = _33.slice(1);
                    if (_33[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__34 = new Three(_34, (_33[0]).value0, (_33[0]).value1, (_33[0]).value2, (_33[0]).value3, (_33[0]).value4, (_33[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _33 = _248;
                        _34 = __tco__34;
                        continue tco;
                    };
                };
                if (_33.length >= 1) {
                    var _256 = _33.slice(1);
                    if (_33[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__34 = new Three((_33[0]).value0, (_33[0]).value1, (_33[0]).value2, _34, (_33[0]).value3, (_33[0]).value4, (_33[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _33 = _256;
                        _34 = __tco__34;
                        continue tco;
                    };
                };
                if (_33.length >= 1) {
                    var _264 = _33.slice(1);
                    if (_33[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__34 = new Three((_33[0]).value0, (_33[0]).value1, (_33[0]).value2, (_33[0]).value3, (_33[0]).value4, (_33[0]).value5, _34);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _33 = _264;
                        _34 = __tco__34;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_7) {
    var up = function (__copy___dict_Ord_8) {
        return function (__copy__45) {
            return function (__copy__46) {
                var __dict_Ord_8 = __copy___dict_Ord_8;
                var _45 = __copy__45;
                var _46 = __copy__46;
                tco: while (true) {
                    if (_45.length === 0) {
                        return new Two(_46.value0, _46.value1, _46.value2, _46.value3);
                    };
                    if (_45.length >= 1) {
                        var _279 = _45.slice(1);
                        if (_45[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_8)(_279)(new Three(_46.value0, _46.value1, _46.value2, _46.value3, (_45[0]).value0, (_45[0]).value1, (_45[0]).value2));
                        };
                    };
                    if (_45.length >= 1) {
                        var _288 = _45.slice(1);
                        if (_45[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_8)(_288)(new Three((_45[0]).value0, (_45[0]).value1, (_45[0]).value2, _46.value0, _46.value1, _46.value2, _46.value3));
                        };
                    };
                    if (_45.length >= 1) {
                        var _300 = _45.slice(1);
                        if (_45[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__46 = new KickUp(new Two(_46.value0, _46.value1, _46.value2, _46.value3), (_45[0]).value0, (_45[0]).value1, new Two((_45[0]).value2, (_45[0]).value3, (_45[0]).value4, (_45[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _45 = _300;
                            _46 = __tco__46;
                            continue tco;
                        };
                    };
                    if (_45.length >= 1) {
                        var _312 = _45.slice(1);
                        if (_45[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__46 = new KickUp(new Two((_45[0]).value0, (_45[0]).value1, (_45[0]).value2, _46.value0), _46.value1, _46.value2, new Two(_46.value3, (_45[0]).value3, (_45[0]).value4, (_45[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _45 = _312;
                            _46 = __tco__46;
                            continue tco;
                        };
                    };
                    if (_45.length >= 1) {
                        var _324 = _45.slice(1);
                        if (_45[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__46 = new KickUp(new Two((_45[0]).value0, (_45[0]).value1, (_45[0]).value2, (_45[0]).value3), (_45[0]).value4, (_45[0]).value5, new Two(_46.value0, _46.value1, _46.value2, _46.value3));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _45 = _324;
                            _46 = __tco__46;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_9) {
        return function (__copy__41) {
            return function (__copy__42) {
                return function (__copy__43) {
                    return function (__copy__44) {
                        var __dict_Ord_9 = __copy___dict_Ord_9;
                        var _41 = __copy__41;
                        var _42 = __copy__42;
                        var _43 = __copy__43;
                        var _44 = __copy__44;
                        tco: while (true) {
                            if (_44 instanceof Leaf) {
                                return up(__dict_Ord_9)(_41)(new KickUp(Leaf.value, _42, _43, Leaf.value));
                            };
                            if (_44 instanceof Two && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_42)(_44.value1)) {
                                return fromZipper(__dict_Ord_9)(_41)(new Two(_44.value0, _42, _43, _44.value3));
                            };
                            if (_44 instanceof Two && Prelude["<"](__dict_Ord_9)(_42)(_44.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__41 = Prelude[":"](new TwoLeft(_44.value1, _44.value2, _44.value3))(_41);
                                var __tco__42 = _42;
                                var __tco__43 = _43;
                                var __tco__44 = _44.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _41 = __tco__41;
                                _42 = __tco__42;
                                _43 = __tco__43;
                                _44 = __tco__44;
                                continue tco;
                            };
                            if (_44 instanceof Two) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__41 = Prelude[":"](new TwoRight(_44.value0, _44.value1, _44.value2))(_41);
                                var __tco__42 = _42;
                                var __tco__43 = _43;
                                var __tco__44 = _44.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _41 = __tco__41;
                                _42 = __tco__42;
                                _43 = __tco__43;
                                _44 = __tco__44;
                                continue tco;
                            };
                            if (_44 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_42)(_44.value1)) {
                                return fromZipper(__dict_Ord_9)(_41)(new Three(_44.value0, _42, _43, _44.value3, _44.value4, _44.value5, _44.value6));
                            };
                            if (_44 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_42)(_44.value4)) {
                                return fromZipper(__dict_Ord_9)(_41)(new Three(_44.value0, _44.value1, _44.value2, _44.value3, _42, _43, _44.value6));
                            };
                            if (_44 instanceof Three && Prelude["<"](__dict_Ord_9)(_42)(_44.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__41 = Prelude[":"](new ThreeLeft(_44.value1, _44.value2, _44.value3, _44.value4, _44.value5, _44.value6))(_41);
                                var __tco__42 = _42;
                                var __tco__43 = _43;
                                var __tco__44 = _44.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _41 = __tco__41;
                                _42 = __tco__42;
                                _43 = __tco__43;
                                _44 = __tco__44;
                                continue tco;
                            };
                            if (_44 instanceof Three && (Prelude["<"](__dict_Ord_9)(_44.value1)(_42) && Prelude["<="](__dict_Ord_9)(_42)(_44.value4))) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__41 = Prelude[":"](new ThreeMiddle(_44.value0, _44.value1, _44.value2, _44.value4, _44.value5, _44.value6))(_41);
                                var __tco__42 = _42;
                                var __tco__43 = _43;
                                var __tco__44 = _44.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _41 = __tco__41;
                                _42 = __tco__42;
                                _43 = __tco__43;
                                _44 = __tco__44;
                                continue tco;
                            };
                            if (_44 instanceof Three) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__41 = Prelude[":"](new ThreeRight(_44.value0, _44.value1, _44.value2, _44.value3, _44.value4, _44.value5))(_41);
                                var __tco__42 = _42;
                                var __tco__43 = _43;
                                var __tco__44 = _44.value6;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _41 = __tco__41;
                                _42 = __tco__42;
                                _43 = __tco__43;
                                _44 = __tco__44;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_7)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_10) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_10)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_11) {
    return function (__dict_Eq_12) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_11)(__dict_Eq_12))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_11)(__dict_Eq_12)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_13) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_28) {
            return insert(__dict_Ord_13)(_28.value0)(_28.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_15) {
    var up = function (__copy___dict_Ord_16) {
        return function (__copy__50) {
            return function (__copy__51) {
                var __dict_Ord_16 = __copy___dict_Ord_16;
                var _50 = __copy__50;
                var _51 = __copy__51;
                tco: while (true) {
                    if (_50.length === 0) {
                        return _51;
                    };
                    if (_50.length >= 1) {
                        var _385 = _50.slice(1);
                        if (_50[0] instanceof TwoLeft && ((_50[0]).value2 instanceof Leaf && _51 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_385)(new Two(Leaf.value, (_50[0]).value0, (_50[0]).value1, Leaf.value));
                        };
                    };
                    if (_50.length >= 1) {
                        var _390 = _50.slice(1);
                        if (_50[0] instanceof TwoRight && ((_50[0]).value0 instanceof Leaf && _51 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_390)(new Two(Leaf.value, (_50[0]).value1, (_50[0]).value2, Leaf.value));
                        };
                    };
                    if (_50.length >= 1) {
                        var _399 = _50.slice(1);
                        if (_50[0] instanceof TwoLeft && (_50[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__51 = new Three(_51, (_50[0]).value0, (_50[0]).value1, (_50[0]).value2.value0, (_50[0]).value2.value1, (_50[0]).value2.value2, (_50[0]).value2.value3);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _50 = _399;
                            _51 = __tco__51;
                            continue tco;
                        };
                    };
                    if (_50.length >= 1) {
                        var _408 = _50.slice(1);
                        if (_50[0] instanceof TwoRight && (_50[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__51 = new Three((_50[0]).value0.value0, (_50[0]).value0.value1, (_50[0]).value0.value2, (_50[0]).value0.value3, (_50[0]).value1, (_50[0]).value2, _51);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _50 = _408;
                            _51 = __tco__51;
                            continue tco;
                        };
                    };
                    if (_50.length >= 1) {
                        var _420 = _50.slice(1);
                        if (_50[0] instanceof TwoLeft && (_50[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_420)(new Two(new Two(_51, (_50[0]).value0, (_50[0]).value1, (_50[0]).value2.value0), (_50[0]).value2.value1, (_50[0]).value2.value2, new Two((_50[0]).value2.value3, (_50[0]).value2.value4, (_50[0]).value2.value5, (_50[0]).value2.value6)));
                        };
                    };
                    if (_50.length >= 1) {
                        var _432 = _50.slice(1);
                        if (_50[0] instanceof TwoRight && (_50[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_432)(new Two(new Two((_50[0]).value0.value0, (_50[0]).value0.value1, (_50[0]).value0.value2, (_50[0]).value0.value3), (_50[0]).value0.value4, (_50[0]).value0.value5, new Two((_50[0]).value0.value6, (_50[0]).value1, (_50[0]).value2, _51)));
                        };
                    };
                    if (_50.length >= 1) {
                        var _440 = _50.slice(1);
                        if (_50[0] instanceof ThreeLeft && ((_50[0]).value2 instanceof Leaf && ((_50[0]).value5 instanceof Leaf && _51 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_440)(new Three(Leaf.value, (_50[0]).value0, (_50[0]).value1, Leaf.value, (_50[0]).value3, (_50[0]).value4, Leaf.value));
                        };
                    };
                    if (_50.length >= 1) {
                        var _448 = _50.slice(1);
                        if (_50[0] instanceof ThreeMiddle && ((_50[0]).value0 instanceof Leaf && ((_50[0]).value5 instanceof Leaf && _51 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_448)(new Three(Leaf.value, (_50[0]).value1, (_50[0]).value2, Leaf.value, (_50[0]).value3, (_50[0]).value4, Leaf.value));
                        };
                    };
                    if (_50.length >= 1) {
                        var _456 = _50.slice(1);
                        if (_50[0] instanceof ThreeRight && ((_50[0]).value0 instanceof Leaf && ((_50[0]).value3 instanceof Leaf && _51 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_456)(new Three(Leaf.value, (_50[0]).value1, (_50[0]).value2, Leaf.value, (_50[0]).value4, (_50[0]).value5, Leaf.value));
                        };
                    };
                    if (_50.length >= 1) {
                        var _468 = _50.slice(1);
                        if (_50[0] instanceof ThreeLeft && (_50[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_468)(new Two(new Three(_51, (_50[0]).value0, (_50[0]).value1, (_50[0]).value2.value0, (_50[0]).value2.value1, (_50[0]).value2.value2, (_50[0]).value2.value3), (_50[0]).value3, (_50[0]).value4, (_50[0]).value5));
                        };
                    };
                    if (_50.length >= 1) {
                        var _480 = _50.slice(1);
                        if (_50[0] instanceof ThreeMiddle && (_50[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_480)(new Two(new Three((_50[0]).value0.value0, (_50[0]).value0.value1, (_50[0]).value0.value2, (_50[0]).value0.value3, (_50[0]).value1, (_50[0]).value2, _51), (_50[0]).value3, (_50[0]).value4, (_50[0]).value5));
                        };
                    };
                    if (_50.length >= 1) {
                        var _492 = _50.slice(1);
                        if (_50[0] instanceof ThreeMiddle && (_50[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_492)(new Two((_50[0]).value0, (_50[0]).value1, (_50[0]).value2, new Three(_51, (_50[0]).value3, (_50[0]).value4, (_50[0]).value5.value0, (_50[0]).value5.value1, (_50[0]).value5.value2, (_50[0]).value5.value3)));
                        };
                    };
                    if (_50.length >= 1) {
                        var _504 = _50.slice(1);
                        if (_50[0] instanceof ThreeRight && (_50[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_504)(new Two((_50[0]).value0, (_50[0]).value1, (_50[0]).value2, new Three((_50[0]).value3.value0, (_50[0]).value3.value1, (_50[0]).value3.value2, (_50[0]).value3.value3, (_50[0]).value4, (_50[0]).value5, _51)));
                        };
                    };
                    if (_50.length >= 1) {
                        var _519 = _50.slice(1);
                        if (_50[0] instanceof ThreeLeft && (_50[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_519)(new Three(new Two(_51, (_50[0]).value0, (_50[0]).value1, (_50[0]).value2.value0), (_50[0]).value2.value1, (_50[0]).value2.value2, new Two((_50[0]).value2.value3, (_50[0]).value2.value4, (_50[0]).value2.value5, (_50[0]).value2.value6), (_50[0]).value3, (_50[0]).value4, (_50[0]).value5));
                        };
                    };
                    if (_50.length >= 1) {
                        var _534 = _50.slice(1);
                        if (_50[0] instanceof ThreeMiddle && (_50[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_534)(new Three(new Two((_50[0]).value0.value0, (_50[0]).value0.value1, (_50[0]).value0.value2, (_50[0]).value0.value3), (_50[0]).value0.value4, (_50[0]).value0.value5, new Two((_50[0]).value0.value6, (_50[0]).value1, (_50[0]).value2, _51), (_50[0]).value3, (_50[0]).value4, (_50[0]).value5));
                        };
                    };
                    if (_50.length >= 1) {
                        var _549 = _50.slice(1);
                        if (_50[0] instanceof ThreeMiddle && (_50[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_549)(new Three((_50[0]).value0, (_50[0]).value1, (_50[0]).value2, new Two(_51, (_50[0]).value3, (_50[0]).value4, (_50[0]).value5.value0), (_50[0]).value5.value1, (_50[0]).value5.value2, new Two((_50[0]).value5.value3, (_50[0]).value5.value4, (_50[0]).value5.value5, (_50[0]).value5.value6)));
                        };
                    };
                    if (_50.length >= 1) {
                        var _564 = _50.slice(1);
                        if (_50[0] instanceof ThreeRight && (_50[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_564)(new Three((_50[0]).value0, (_50[0]).value1, (_50[0]).value2, new Two((_50[0]).value3.value0, (_50[0]).value3.value1, (_50[0]).value3.value2, (_50[0]).value3.value3), (_50[0]).value3.value4, (_50[0]).value3.value5, new Two((_50[0]).value3.value6, (_50[0]).value4, (_50[0]).value5, _51)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_17) {
        return function (__copy__53) {
            return function (__copy__54) {
                var __dict_Ord_17 = __copy___dict_Ord_17;
                var _53 = __copy__53;
                var _54 = __copy__54;
                tco: while (true) {
                    if (_54 instanceof Two && (_54.value0 instanceof Leaf && _54.value3 instanceof Leaf)) {
                        return up(__dict_Ord_17)(_53)(Leaf.value);
                    };
                    if (_54 instanceof Two) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__53 = Prelude[":"](new TwoRight(_54.value0, _54.value1, _54.value2))(_53);
                        var __tco__54 = _54.value3;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _53 = __tco__53;
                        _54 = __tco__54;
                        continue tco;
                    };
                    if (_54 instanceof Three && (_54.value0 instanceof Leaf && (_54.value3 instanceof Leaf && _54.value6 instanceof Leaf))) {
                        return up(__dict_Ord_17)(Prelude[":"](new TwoRight(Leaf.value, _54.value1, _54.value2))(_53))(Leaf.value);
                    };
                    if (_54 instanceof Three) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__53 = Prelude[":"](new ThreeRight(_54.value0, _54.value1, _54.value2, _54.value3, _54.value4, _54.value5))(_53);
                        var __tco__54 = _54.value6;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _53 = __tco__53;
                        _54 = __tco__54;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_18) {
        return function (__copy__52) {
            var __dict_Ord_18 = __copy___dict_Ord_18;
            var _52 = __copy__52;
            tco: while (true) {
                if (_52 instanceof Two && _52.value3 instanceof Leaf) {
                    return {
                        key: _52.value1, 
                        value: _52.value2
                    };
                };
                if (_52 instanceof Two) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__52 = _52.value3;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _52 = __tco__52;
                    continue tco;
                };
                if (_52 instanceof Three && _52.value6 instanceof Leaf) {
                    return {
                        key: _52.value4, 
                        value: _52.value5
                    };
                };
                if (_52 instanceof Three) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__52 = _52.value6;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _52 = __tco__52;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_19) {
        return function (__copy__47) {
            return function (__copy__48) {
                return function (__copy__49) {
                    var __dict_Ord_19 = __copy___dict_Ord_19;
                    var _47 = __copy__47;
                    var _48 = __copy__48;
                    var _49 = __copy__49;
                    tco: while (true) {
                        if (_49 instanceof Leaf) {
                            return fromZipper(__dict_Ord_19)(_47)(Leaf.value);
                        };
                        if (_49 instanceof Two && (_49.value0 instanceof Leaf && (_49.value3 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_48)(_49.value1)))) {
                            return up(__dict_Ord_19)(_47)(Leaf.value);
                        };
                        if (_49 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_48)(_49.value1)) {
                                var max = maxNode(__dict_Ord_19)(_49.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new TwoLeft(max.key, max.value, _49.value3))(_47))(_49.value0);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_48)(_49.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__47 = Prelude[":"](new TwoLeft(_49.value1, _49.value2, _49.value3))(_47);
                                var __tco__48 = _48;
                                var __tco__49 = _49.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _47 = __tco__47;
                                _48 = __tco__48;
                                _49 = __tco__49;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__47 = Prelude[":"](new TwoRight(_49.value0, _49.value1, _49.value2))(_47);
                                var __tco__48 = _48;
                                var __tco__49 = _49.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _47 = __tco__47;
                                _48 = __tco__48;
                                _49 = __tco__49;
                                continue tco;
                            };
                        };
                        if (_49 instanceof Three && (_49.value0 instanceof Leaf && (_49.value3 instanceof Leaf && _49.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_48)(_49.value1)) {
                                return fromZipper(__dict_Ord_19)(_47)(new Two(Leaf.value, _49.value4, _49.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_48)(_49.value4)) {
                                return fromZipper(__dict_Ord_19)(_47)(new Two(Leaf.value, _49.value1, _49.value2, Leaf.value));
                            };
                        };
                        if (_49 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_48)(_49.value1)) {
                                var max = maxNode(__dict_Ord_19)(_49.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeLeft(max.key, max.value, _49.value3, _49.value4, _49.value5, _49.value6))(_47))(_49.value0);
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_48)(_49.value4)) {
                                var max = maxNode(__dict_Ord_19)(_49.value3);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeMiddle(_49.value0, _49.value1, _49.value2, max.key, max.value, _49.value6))(_47))(_49.value3);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_48)(_49.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__47 = Prelude[":"](new ThreeLeft(_49.value1, _49.value2, _49.value3, _49.value4, _49.value5, _49.value6))(_47);
                                var __tco__48 = _48;
                                var __tco__49 = _49.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _47 = __tco__47;
                                _48 = __tco__48;
                                _49 = __tco__49;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_19)(_49.value1)(_48) && Prelude["<"](__dict_Ord_19)(_48)(_49.value4)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__47 = Prelude[":"](new ThreeMiddle(_49.value0, _49.value1, _49.value2, _49.value4, _49.value5, _49.value6))(_47);
                                var __tco__48 = _48;
                                var __tco__49 = _49.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _47 = __tco__47;
                                _48 = __tco__48;
                                _49 = __tco__49;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__47 = Prelude[":"](new ThreeRight(_49.value0, _49.value1, _49.value2, _49.value3, _49.value4, _49.value5))(_47);
                                var __tco__48 = _48;
                                var __tco__49 = _49.value6;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _47 = __tco__47;
                                _48 = __tco__48;
                                _49 = __tco__49;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_15)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_40) {
        if (_40 instanceof Leaf) {
            return [ 0 ];
        };
        if (_40 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_40.value0))(allHeights(_40.value3)));
        };
        if (_40 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_40.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_40.value3))(allHeights(_40.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_20) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _649 = f(lookup(__dict_Ord_20)(k)(m));
                if (_649 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_20)(k)(m);
                };
                if (_649 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_20)(k)(_649.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};

/**
 *  Computes the union of two maps, except that when a key exists in both maps, its value in the result
 *  is computed by combining them with the supplied function.
 */
var unionWith = function (__dict_Ord_21) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (_55) {
                    return function (_56) {
                        return alter(__dict_Ord_21)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_56.value1)(f(_56.value1))))(_56.value0)(_55);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_22) {
    return unionWith(__dict_Ord_22)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_23) {
    return new Prelude.Semigroup(union(__dict_Ord_23));
};
var monoidMap = function (__dict_Ord_14) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_14);
    }, empty);
};
var traversableMap = function (__dict_Ord_24) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_26) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_24))(__dict_Applicative_26)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_25) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_25["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_24))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_25)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_25)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_27) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_27))(empty);
};
var update = function (__dict_Ord_28) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_28)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    size: size, 
    map: map, 
    unions: unions, 
    unionWith: unionWith, 
    union: union, 
    values: values, 
    keys: keys, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromList: fromList, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    checkValid: checkValid, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    empty: empty, 
    showTree: showTree, 
    eqMap: eqMap, 
    showMap: showMap, 
    semigroupMap: semigroupMap, 
    monoidMap: monoidMap, 
    functorMap: functorMap, 
    foldableMap: foldableMap, 
    traversableMap: traversableMap
};
