"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = function (x) {
    return x;
};
var showLast = function (__dict_Show_0) {
    return new Prelude.Show(function (_245) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_245) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (_246) {
    return function (_247) {
        if (_247 instanceof Data_Maybe.Just) {
            return _247;
        };
        if (_247 instanceof Data_Maybe.Nothing) {
            return _246;
        };
        throw new Error("Failed pattern match");
    };
});
var runLast = function (_238) {
    return _238;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var eqLast = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_241) {
        return function (_242) {
            return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_2))(_241)(_242);
        };
    }, function (_239) {
        return function (_240) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_239)(_240);
        };
    });
};
var ordLast = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqLast(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_243) {
        return function (_244) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_243)(_244);
        };
    });
};
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};
