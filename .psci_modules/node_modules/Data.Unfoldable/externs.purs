module Data.Unfoldable where
import Control.Monad.Eff ()
import Data.Array.ST ()
import Prelude ()
import Control.Monad.ST ()
import Prim ()
import Prelude ()
import Data.Maybe ()
import Data.Tuple ()
import Data.Array.ST ()
import Control.Monad.Eff ()
import Control.Monad.ST ()
class Unfoldable t where
  unfoldr :: forall a b. (b -> Data.Maybe.Maybe (Data.Tuple.Tuple a b)) -> b -> t a
foreign import instance unfoldableArray :: Data.Unfoldable.Unfoldable Prim.Array
