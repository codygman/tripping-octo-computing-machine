module Example.Stuff where
import Control.Monad.JQuery ()
import Data.Foldable ()
import Prelude ()
import Global ()
import Data.Array ()
import Data.String ()
import Data.Either ()
import Example.Stuff ()
import Data.Foreign ()
import Prim ()
import Data.Either ()
import Prelude ()
import Data.Foreign ()
import Data.Foreign.Class ()
import Control.Monad.Eff ()
import Control.Monad.Eff.Exception ()
import Control.Monad ()
import Control.Monad.JQuery ()
import Debug.Trace ()
import Example.Stuff ()
import Data.Foreign.Null ()
import Data.Foldable ()
import Global ()
import Data.Array ()
import Data.String ()
--  gives "x" in the case of Right "x" or the provided default value
foreign import applyFunction :: Prim.String -> Prim.String -> Prim.Boolean
foreign import watch :: forall t77. (Prim.String -> Prim.Boolean) -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | t77) Control.Monad.JQuery.JQuery
foreign import validate :: forall t47. (Prim.String -> Prim.Boolean) -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | t47) Control.Monad.JQuery.JQuery
foreign import fromEither :: forall t18 t23. t18 -> Data.Either.Either t23 t18 -> t18
foreign import toggleHighlightError :: forall t8. Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | t8) Control.Monad.JQuery.JQuery
foreign import usernameValid :: Prim.String -> Prim.Boolean
foreign import allDigits :: Prim.String -> Prim.Boolean
foreign import ($.) :: forall eff. Prim.String -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
