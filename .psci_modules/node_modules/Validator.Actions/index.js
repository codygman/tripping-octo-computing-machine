"use strict";
var Control_Monad_JQuery = require("Control.Monad.JQuery");
var Data_Either = require("Data.Either");
var Prelude = require("Prelude");
var Data_Foreign = require("Data.Foreign");
var Data_DOM_Simple_Element = require("Data.DOM.Simple.Element");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad = require("Control.Monad");
var Data_DOM_Simple_Events = require("Data.DOM.Simple.Events");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var $dollar$dot = Control_Monad_JQuery.select;
var watch$prime = function (validator) {
    return function (input) {
        return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
    };
};

/**
 *  toggleInvalid input = do
 *    classRemove "invalid" input
 *    classAdd "valid" input  
 */
var validate$prime = function (validator) {
    return function (input) {
        return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
    };
};
var toggleValid = function (input) {
    return function __do() {
        Data_DOM_Simple_Element.classRemove(Data_DOM_Simple_Element.htmlElement)("invalid")(input)();
        Data_DOM_Simple_Element.classAdd(Data_DOM_Simple_Element.htmlElement)("valid")(input)();
        return Prelude.unit;
    };
};
var toggleInvalid = function (input) {
    return function __do() {
        Data_DOM_Simple_Element.classRemove(Data_DOM_Simple_Element.htmlElement)("valid")(input)();
        Data_DOM_Simple_Element.classAdd(Data_DOM_Simple_Element.htmlElement)("invalid")(input)();
        return Prelude.unit;
    };
};
var toggleHighlightError = function (input) {
    return Control_Monad_JQuery.css({
        "border-color": "red", 
        "border-width": "medium"
    })(input);
};

/**
 *  gives "x" in the case of Right "x" or the provided default value
 */
var fromEither = function (def) {
    return Data_Either.either(Prelude["const"](def))(Prelude.id(Prelude.categoryArr));
};
var validate = function (validator) {
    return function (input) {
        return function __do() {
            var _0 = Prelude.liftM1(Control_Monad_Eff.monadEff)(fromEither(""))(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readString)(Control_Monad_JQuery.getValue(input)))();
            return (function () {
                var valid = validator(_0);
                return function __do() {
                    Control_Monad_JQuery["toggleClass'"]("invalid")(!valid)(input)();
                    return Control_Monad_JQuery["toggleClass'"]("valid")(valid)(input)();
                };
            })()();
        };
    };
};
var watch = function (validator) {
    return function (input) {
        return Prelude.flip(Control_Monad_JQuery.on("blur"))(input)(function (_) {
            return function (__1) {
                return validate(validator)(input);
            };
        });
    };
};
var f = Prelude.unit;
module.exports = {
    "watch'": watch$prime, 
    f: f, 
    watch: watch, 
    "validate'": validate$prime, 
    toggleInvalid: toggleInvalid, 
    toggleValid: toggleValid, 
    validate: validate, 
    fromEither: fromEither, 
    toggleHighlightError: toggleHighlightError, 
    "$.": $dollar$dot
};
